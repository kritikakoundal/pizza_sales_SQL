################## pizza sales SQL project ############################# 


-- 1) retrive the total number of orders placed
SELECT count(order_id) AS total_orders FROM orders;

-- 2) calculate the total number revenue generater from pizza size.alter
SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS total_sales
FROM
    order_details
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id

-- 3)identify the highest-priced pizza.
SELECT 
    pizza_types.name, pizzas.price
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;

--4) IDENTIFY THE MOST COMMON PIZZA SIZE ORDERED.
SELECT 
    pizzas.size,
    COUNT(order_details.order_details_id) AS order_count
FROM
    pizzas
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizzas.size
ORDER BY order_count DESC;

-- 5) list of top 5 most orderd pizza type along with their quantities.
SELECT 
    pizza_types.name, SUM(order_details.quantity) AS quantity
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY quantity DESC
LIMIT 5;

-- 6) join the necessary tables to find the total quantity of each pizza category orderd.

SELECT 
    pizza_types.category, 
    SUM(order_details.quantity) AS quantity
FROM 
    pizza_types
JOIN 
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN 
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY 
    pizza_types.category
ORDER BY 
    quantity DESC
LIMIT 5;

--7) Determine the distribution of orders by hour of the day.
SHOW COLUMNS FROM orders;
SELECT * FROM sales_piza_project.orders;
SELECT 
    HOUR(CONCAT(date, ' ', time)) AS hour,
    COUNT(order_id) AS order_count
FROM 
    orders
GROUP BY 
    HOUR(CONCAT(date, ' ', time));

--8) join relevant tables to find the category- wise distribution of pizzas.

SELECT 
    category, COUNT(name)
FROM
    pizza_types
GROUP BY category;

--9) group the order by date and calculate the average number of pizzas orderd per day.

SELECT 
    round(avg(total_quantity),0) as avg_pizza_ordered_per_day
FROM
    (SELECT 
        orders.date, SUM(order_details.quantity) AS total_quantity
    FROM
        orders
    JOIN order_details ON orders.order_id = order_details.order_id
    GROUP BY orders.date
    LIMIT 0 , 1000) AS order_quantity;

--10) determine the top3 most ordered pizza types based on revenue.

SELECT 
    pizza_types.name,  
    SUM(order_details.quantity * pizzas.price) AS revenue 
FROM 
    pizza_types 
JOIN 
    pizzas 
    ON pizzas.pizza_type_id = pizza_types.pizza_type_id 
JOIN 
    order_details 
    ON order_details.pizza_id = pizzas.pizza_id 
GROUP BY 
    pizza_types.name order by revenue desc limit 3;

--11) group the orders by date and caalculate the average number of pizzas ordered per day.

SELECT pizza_types.category,  
       (SUM(order_details.quantity * pizzas.price) / total_sales.total_revenue) * 100 AS percentage_of_total_sales
FROM pizza_types
JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN order_details ON order_details.pizza_id = pizzas.pizza_id
JOIN (
    SELECT SUM(order_details.quantity * pizzas.price) AS total_revenue
    FROM order_details
    JOIN pizzas ON order_details.pizza_id = pizzas.pizza_id
) AS total_sales
GROUP BY pizza_types.category, total_sales.total_revenue
ORDER BY percentage_of_total_sales DESC;

--12) analyze the cumulative revenue generated over time

SELECT date, 
       SUM(revenue) OVER (ORDER BY date) AS cum_revenue
FROM (
    SELECT o.date, 
           SUM(od.quantity * p.price) AS revenue
    FROM order_details od
    JOIN pizzas p ON od.pizza_id = p.pizza_id
    JOIN orders o ON o.order_id = od.order_id
    GROUP BY o.date
) AS sales;

--13) DETERMINE THE TOP 3 MOST ORDERED PIZZA TYPES BASED ON REVENUE FOR EACH PIZZA CATEGORY.

select name, revenue from
(SELECT category, 
       name, 
       revenue, 
       RANK() OVER (PARTITION BY category ORDER BY revenue DESC) AS ranking
FROM (
    SELECT pizza_types.category, 
           pizza_types.name, 
           SUM(order_details.quantity * pizzas.price) AS revenue
    FROM pizza_types
    JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
    JOIN order_details ON order_details.pizza_id = pizzas.pizza_id
    GROUP BY pizza_types.category, pizza_types.name
) AS sales_data) as b
where ranking <= 3 ;  





